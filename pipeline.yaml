---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Cutting-Edge Architecture: Deployment Pipeline, a cloudonaut.io project'
Parameters:
  GithubOwner:
    Type: String
  GithubRepo:
    Type: String
  GithubOAuthToken:
    Type: String
    NoEcho: true
  EnviromentSuffix:
    Type: String
    Default: ''
Resources:
  ArtifactStore:
    Type: 'AWS::S3::Bucket'
  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'cloudformation.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codepipeline.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AdministratorAccess'
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
      Name: !Ref 'AWS::StackName'
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt 'PipelineRole.Arn'
      Stages:
      - Name: Source
        Actions:
        - Name: FetchSource
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: !Ref GithubOwner
            Repo: !Ref GithubRepo
            Branch: 'master'
            OAuthToken: !Ref GithubOAuthToken
          OutputArtifacts:
          - Name: Source
          RunOrder: 1
      - Name: Pipeline
        Actions:
        - Name: DeployPipeline
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_IAM
            RoleArn: !GetAtt 'CloudFormationRole.Arn'
            StackName: !Ref 'AWS::StackName'
            TemplatePath: 'Source::pipeline.yaml'
            ParameterOverrides: !Sub '{"GithubOwner": "${GithubOwner}", "GithubRepo": "${GithubRepo}", "GithubOAuthToken": "${GithubOAuthToken}", "EnviromentSuffix": "${EnviromentSuffix}"}'
          InputArtifacts:
          - Name: Source
          RunOrder: 1
