type Query {
  getVotingResults(nextToken: String): VotingResults
  getServices(nextToken: String): Services
}

type Mutation {
  vote(service: Service!): Boolean
}

schema {
  query: Query
  mutation: Mutation
}

enum Service {
  ec2
  lambda
  fargate
  clb
  nlb
  alb
  appsync
  apigateway
  eks
  ecs
  rds-aurora
  rds-postgres
  rds-mysql
  rds-mariadb
  dynamodb
  s3
  efs
  ebs
}

type Services {
  items: [Service]
  nextToken: String
}

type VotingResults {
  items: [VotingResult]
  nextToken: String
}

type VotingResult {
  service: Service!
  upvotes: Int!
}
